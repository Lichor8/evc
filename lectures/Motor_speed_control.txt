function test()

format short;
clc;
clear all;

%parameters
J = 0.0015;
b = 0.03;
Kt = 0.1;
Ke = 0.1;
R = 1;
L = 0.01;
V = 12;

%% System you want to control
A=[-b/J   -Kt/J
   -Ke/L  -R/L]
B=[0;V/L]
C=[1 0];


%% cntinuous-time poles: check system stability
eigs(A)


%% continuous-time state space
sys_cont = ss(A,B,C,0);


%% Sampling period
h = 0.002;

%% ZOH based discrete system
sys_disc= c2d(sys_cont, h);
phi = sys_disc.a
Gamma = sys_disc.b


%% controllability test
gamma = [Gamma phi*Gamma];
det(gamma)

if det(gamma) == 0
    disp('Uncontrollable');
else
    disp('Controllable');
end

 
%% discrete-time poles 
eigs(phi)

%% Desired closed-loop poles
alpha = [0.2 0.3];

%% feedback gain
K = -acker(phi,Gamma,alpha)

%% feedforward gain
F = 1/(C*inv(eye(2)-phi-Gamma*K)*Gamma)

%% reference
r = 0.5;

%% initial conditions
x1(2) = .0; x1(1) = .0;
x2(2) = .0; x2(1) = 0.0;
input(2) = 0; input(1) = 0;
time(2) = h; time(1) = 0;

for i=2:0.04/h
   
    u = K*[x1(i);x2(i)] + F*r;
    xkp1 = phi*[x1(i);x2(i)]+  Gamma*u;
    x1(i+1) = xkp1(1);
    x2(i+1) = xkp1(2);
    input(i+1) = u;    
    time(i+1) = time(i) + h;   
end


plot(time, x1, 'b');
% plot(time, input, 'b');
max(abs(input))

